#include <stdio.h>
#include <iostream>
#include <random>


#define N 5

std::random_device rd;
std::mt19937 gen(rd());
std::uniform_real_distribution<float> dis(0.0, 100.0);


__host__ void generateMatrix(float** m) {
    *m = (float*) malloc(N * N * sizeof(float));
    for (int i = 0; i < N * N; ++i) {
        (*m)[i] = dis(gen);
    }
}

__host__ void printMatrix(float* m) {
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            std::cout << m[i*N + j] << " ";
        }
        std::cout << std::endl;
    }
}


int main() {
    // Generate random A and B matrices
    float *A, *B, *CC, *CGPU;

    generateMatrix(&A);
    generateMatrix(&B);



    // Generate the correct matrix C


    // Generate matrix C based off of GPU CUDA kernel


    // Check that the implementation is correct
}
